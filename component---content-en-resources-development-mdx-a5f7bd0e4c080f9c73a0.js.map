{"version":3,"sources":["webpack://kernel-community/./content/en/resources/development.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Process","Link","Box","Chocolate","Flex","Icon","Button","Column","Video","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","sx","backgroundColor","borderRadius","padding","display","marginBottom","flexDirection","flexWrap","position","margin","size","bottom","src","isMDXComponent"],"mappings":"2QAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAON,EAAc,QACrBO,EAAMP,EAAc,OACpBQ,EAAYR,EAAc,aAC1BS,EAAOT,EAAc,QACrBU,EAAOV,EAAc,QACrBW,EAASX,EAAc,UACvBY,EAASZ,EAAc,UACvBa,EAAQb,EAAc,SACtBc,EAAc,CAClBf,gBAEIgB,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGhB,GACF,YACD,OAAO,QAACa,EAAD,iBAAeD,EAAiBZ,EAAhC,CAAuCgB,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAKkB,aAAGC,WAAW,KAC5B,KAAQ,eACR,aAAc,wBACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,4CAA8B,kBAAQA,WAAW,KAAnB,oBAA9B,kXACA,yHAA2G,kBAAQA,WAAW,KAAnB,kEAA3G,qOACA,cACE,GAAM,kBACN,MAAS,CACP,SAAY,aAHhB,mBAKsB,aAAGA,WAAW,KAChC,KAAQ,mBACR,aAAc,4BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,qLACA,QAACf,EAAD,CAASc,QAAQ,YACf,kBAAG,kBAAQC,WAAW,KAAnB,YAAH,OAAsD,QAACd,EAAD,CAAMe,GAAG,4BAA4BF,QAAQ,QAA7C,iBAAtD,gIACA,kBAAG,kBAAQC,WAAW,KAAnB,YAAH,OAAsD,QAACd,EAAD,CAAMe,GAAG,qBAAqBF,QAAQ,QAAtC,aAAtD,+UACA,kBAAG,kBAAQC,WAAW,KAAnB,YAAH,OAAsD,QAACd,EAAD,CAAMe,GAAG,sFAAsFF,QAAQ,QAAvG,iBAAtD,0WAAsiB,QAACb,EAAD,CAAMe,GAAG,sFAAsFF,QAAQ,QAAvG,gDAAtiB,mIACA,kBAAG,kBAAQC,WAAW,KAAnB,gBAAH,OAA0D,QAACd,EAAD,CAAMe,GAAG,sCAAsCF,QAAQ,QAAvD,aAA1D,kQAA8Y,aAAGC,WAAW,IACxZ,KAAQ,gCADkY,yBAA9Y,4DAE8F,aAAGA,WAAW,IACxG,KAAQ,oCADkF,uCAF9F,mFAKA,kBAAG,kBAAQA,WAAW,KAAnB,gBAAH,OAA0D,QAACd,EAAD,CAAMe,GAAG,6BAA6BF,QAAQ,QAA9C,+BAA1D,6OACA,kBAAG,kBAAQC,WAAW,KAAnB,gBAAH,OAA0D,QAACd,EAAD,CAAMe,GAAG,gCAAgCF,QAAQ,QAAjD,sBAA1D,+EAA8N,QAACb,EAAD,CAAMe,GAAG,+CAA+CF,QAAQ,QAAhE,0BAA9N,mNACA,kBAAG,kBAAQC,WAAW,KAAnB,gBAAH,OAA0D,QAACd,EAAD,CAAMe,GAAG,4BAA4BF,QAAQ,QAA7C,aAA1D,MAAwI,QAACb,EAAD,CAAMe,GAAG,yBAAyBF,QAAQ,QAA1C,eAAxI,UAAyN,QAACb,EAAD,CAAMe,GAAG,uEAAuEF,QAAQ,QAAxF,mBAAzN,yXAA2sB,kBAAQC,WAAW,KAAnB,OAA3sB,mEACA,kBAAG,kBAAQA,WAAW,KAAnB,YAAH,OAAsD,QAACd,EAAD,CAAMe,GAAG,+CAA+CF,QAAQ,QAAhE,0BAAtD,ifAEF,cACE,GAAM,sBACN,MAAS,CACP,SAAY,aAHhB,uBAK0B,aAAGC,WAAW,KACpC,KAAQ,uBACR,aAAc,gCACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,QAACb,EAAD,CAAKe,GAAI,CACPC,gBAAiB,eACjBC,aAAc,OACdC,QAAS,OACTC,QAAS,OACTC,aAAc,OACdC,cAAe,SACfC,SAAU,QACTV,QAAQ,QACT,QAACX,EAAD,CAAWc,GAAI,CACbK,aAAc,UACbR,QAAQ,cACT,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,0BACH,kFACA,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,+EAA+EF,QAAQ,UAH7F,UAOF,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,uBACH,4LACA,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,8CAA8CF,QAAQ,UAH5D,YAOF,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,iCACH,4KACA,kBAAG,cAAIA,WAAW,KAAf,yBACH,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,6BAA6BF,QAAQ,UAH3C,aASN,cACE,GAAM,kBACN,MAAS,CACP,SAAY,aAHhB,mBAKsB,aAAGC,WAAW,KAChC,KAAQ,mBACR,aAAc,4BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,2RACA,oOAAsN,aAAGA,WAAW,IAChO,KAAQ,+BAD0M,iBAAtN,MAGA,QAACR,EAAD,CAAQO,QAAQ,WACd,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,kBAAG,kBAAQC,WAAW,KAAnB,yBACH,kHACA,QAACT,EAAD,CAAQU,GAAG,sCAAsCF,QAAQ,UAAzD,UAIF,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,kBAAG,kBAAQC,WAAW,KAAnB,gBACH,+GACA,QAACT,EAAD,CAAQU,GAAG,6DAA6DF,QAAQ,UAAhF,YAKJ,cACE,GAAM,mBACN,MAAS,CACP,SAAY,aAHhB,oBAKuB,aAAGC,WAAW,KACjC,KAAQ,oBACR,aAAc,6BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,uEAAyD,aAAGA,WAAW,IACnE,KAAQ,kDAD6C,mBAAzD,yRAGA,iIAAmH,aAAGA,WAAW,IAC7H,KAAQ,uCADuG,oBAAnH,MAGA,QAACb,EAAD,CAAKe,GAAI,CACPC,gBAAiB,eACjBC,aAAc,OACdC,QAAS,OACTC,QAAS,OACTC,aAAc,OACdC,cAAe,SACfC,SAAU,QACTV,QAAQ,QACT,QAACX,EAAD,CAAWc,GAAI,CACbK,aAAc,UACbR,QAAQ,cACT,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,YACH,kGACA,kBAAG,cAAIA,WAAW,KAAf,wBACH,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,sBAAsBF,QAAQ,UAHpC,aAOF,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,sBACH,4GAA8F,aAAGA,WAAW,IACxG,KAAQ,+CADkF,mCAA9F,MAGA,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,2BAA2BF,QAAQ,UAHzC,eAOF,QAACV,EAAD,CAAMa,GAAI,CACRQ,SAAU,WACVF,cAAe,SACfG,OAAQ,YACPZ,QAAQ,SACT,QAACT,EAAD,CAAMsB,KAAM,OAAQ/B,KAAK,kBAAkBkB,QAAQ,UACnD,kBAAG,kBAAQC,WAAW,KAAnB,cACH,yDACA,kBAAG,cAAIA,WAAW,KAAf,cACH,QAACT,EAAD,CAAQW,GAAI,CACVQ,SAAU,WACVG,OAAQ,SACPZ,GAAG,uCAAuCF,QAAQ,UAHrD,aASN,cACE,GAAM,aACN,MAAS,CACP,SAAY,aAHhB,cAKiB,aAAGC,WAAW,KAC3B,KAAQ,cACR,aAAc,uBACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,oLACA,QAACP,EAAD,CAAOqB,IAAI,+DAA+Df,QAAQ,WAKtFF,EAAWkB,gBAAiB","file":"component---content-en-resources-development-mdx-a5f7bd0e4c080f9c73a0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Process = makeShortcode(\"Process\");\nconst Link = makeShortcode(\"Link\");\nconst Box = makeShortcode(\"Box\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Flex = makeShortcode(\"Flex\");\nconst Icon = makeShortcode(\"Icon\");\nconst Button = makeShortcode(\"Button\");\nconst Column = makeShortcode(\"Column\");\nconst Video = makeShortcode(\"Video\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"development\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Development`}<a parentName=\"h1\" {...{\n        \"href\": \"#development\",\n        \"aria-label\": \"development permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <p>{`The point of Kernel is `}<strong parentName=\"p\">{`not to overwhelm`}</strong>{` you with lists of links. The truth is that there are a great many coding tools out there, each of which makes different trade-offs and will be better or worse depending on your needs and context. This is what mentors are for: we recommend you spend more time picking their brains than scrolling through endless awesome lists of half-maintained, experimental tools.`}</p>\n    <p>{`Rather than recommending specific IDEs, standards, editors, best practices or anything of the like, `}<strong parentName=\"p\">{`this page is intended to help you sharpen your Solidity skills`}</strong>{`. We know there are many different approaches to smart contracts, and we know that Solidity has its problems, but it is the most widely used and the most accessible to current web developers and so it remains our focus here.`}</p>\n    <h2 {...{\n      \"id\": \"the-direct-path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`The Direct Path`}<a parentName=\"h2\" {...{\n        \"href\": \"#the-direct-path\",\n        \"aria-label\": \"the direct path permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`There are, of course, many paths to smart contract nirvana. We will present many of them on this page, but here is the shortest way we know to ongoing mastery:`}</p>\n    <Process mdxType=\"Process\">\n      <p><strong parentName=\"p\">{`Beginner`}</strong>{` - `}<Link to=\"https://cryptozombies.io/\" mdxType=\"Link\">{`CryptoZombies`}</Link>{`. You know nothing about smart contracts or solidity. This interactive course will get you up to speed with basic concepts.`}</p>\n      <p><strong parentName=\"p\">{`Beginner`}</strong>{` - `}<Link to=\"https://eth.build/\" mdxType=\"Link\">{`Eth.build`}</Link>{`. An educational sandbox for web3 which lets you code with blocks, much like in Scratch. Of course, you can do really awesome things with this tool, but it is a wonderful, visual programming tool which will help you develop an intuition for how smart contracts work, and how different the environment in which they live really is.`}</p>\n      <p><strong parentName=\"p\">{`Beginner`}</strong>{` - `}<Link to=\"https://www.youtube.com/watch?v=v_hU0jPtLto&list=PL16WqdAj66SCOdL6XIFbke-XQg2GW_Avg\" mdxType=\"Link\">{`Will It Scale`}</Link>{`. This is still our favourite series of YouTube tutorials, and it will introduce you to the Remix IDE and a whole host of much deeper concepts in Solidity. While watching videos rather than coding is generally not that useful, this will give you much more context for what is to come. For another great series to get started with deep learning, we recommend `}<Link to=\"https://www.youtube.com/watch?v=KNJGPI0fuFA&list=PLEGCF-WLh2RLOHv_xUGLqRts_9JxrckiA\" mdxType=\"Link\">{`Tim Roughgarden's fundamental lecture series`}</Link>{`. Tim is one of the best teachers we know, and we also recommend any of his resources on game theory if that is your interest.`}</p>\n      <p><strong parentName=\"p\">{`Intermediate`}</strong>{` - `}<Link to=\"https://ethernaut.openzeppelin.com/\" mdxType=\"Link\">{`Ethernaut`}</Link>{`. This starts out simple, but contains many wonderful challenges and surprises for those more familiar with Solidity and the global, public context in which smart contracts live. You can find a detailed walk-through of the first twelve challenges in our `}<a parentName=\"p\" {...{\n          \"href\": \"/build/outsmarting-contracts\"\n        }}>{`Outsmarting Contracts`}</a>{` guild. We also recommend that you play around with the `}<a parentName=\"p\" {...{\n          \"href\": \"https://wizard.openzeppelin.com/\"\n        }}>{`Open Zeppelin smart contract wizard`}</a>{`, which can be extremely helpful when creating a solid base for your own work.`}</p>\n      <p><strong parentName=\"p\">{`Intermediate`}</strong>{` - `}<Link to=\"https://uniswapv3book.com/\" mdxType=\"Link\">{`Uniswap V3 Development Book`}</Link>{`. Now that you know a bit about Solidity and security, we recommend this incredible resource which will teach you a lot about DeFi, Automated Market Makers, exchanges in general, and how to think about building an app in production.`}</p>\n      <p><strong parentName=\"p\">{`Intermediate`}</strong>{` - `}<Link to=\"https://speedrunethereum.com/\" mdxType=\"Link\">{`Speed Run Ethereum`}</Link>{`. A set of in-depth tutorials currently being built out which leverage the `}<Link to=\"https://github.com/scaffold-eth/scaffold-eth\" mdxType=\"Link\">{`scaffold-eth framework`}</Link>{`. The framework is specifically intended for quick experimentation. It's worth checking out all the branches in that repo for lost of different code relevant to everything from NFTs to exchanges and beyond.`}</p>\n      <p><strong parentName=\"p\">{`Intermediate`}</strong>{` - `}<Link to=\"https://www.learnweb3.io/\" mdxType=\"Link\">{`LearnWeb3`}</Link>{`, `}<Link to=\"https://buildspace.so/\" mdxType=\"Link\">{`Build Space`}</Link>{`, and `}<Link to=\"https://www.30daysofweb3.xyz/curriculum/1-getting-started/0-overview\" mdxType=\"Link\">{`30 Days of Web3`}</Link>{`. These cohort-based programs focus exclusively on technical skills. Building with others is also more fun and instructive. Kernel does not adopt this style of teaching because it papers over many assumptions about what frameworks to use, how to write tests, where to deploy your contracts and how, and many, many other aspects we feel are best answered through considered `}<strong parentName=\"p\">{`why`}</strong>{` rather than trying to exhaust an ever-expanding list of hows.`}</p>\n      <p><strong parentName=\"p\">{`Advanced`}</strong>{` - `}<Link to=\"https://github.com/kernel-community/services\" mdxType=\"Link\">{`Kernel Building Kernel`}</Link>{`. You'll notice that continuing to do tutorials and toy examples will not get you passed the intermediate stage. If you want to master any skill, eventually you have to dive into unexplored parts of the ocean and shoot for the stars, without caring too much about what people will think of your mixed metaphors or strange commits. Come and learn how to build the future of the decentralized web with us. We promise you it will be an interesting ride. Join #kernel-building-kernel for more...`}</p>\n    </Process>\n    <h2 {...{\n      \"id\": \"the-documented-path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`The Documented Path`}<a parentName=\"h2\" {...{\n        \"href\": \"#the-documented-path\",\n        \"aria-label\": \"the documented path permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <Box sx={{\n      backgroundColor: 'primaryMuted',\n      borderRadius: '12px',\n      padding: '1rem',\n      display: 'flex',\n      marginBottom: '1rem',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    }} mdxType=\"Box\">\n      <Chocolate sx={{\n        marginBottom: '1.5rem'\n      }} mdxType=\"Chocolate\">\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`Solidity ReadtheDocs`}</strong></p>\n          <p>{`Everything you ever needed to know about how Solidity works.`}</p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://docs.soliditylang.org/en/latest/introduction-to-smart-contracts.html\" mdxType=\"Button\">\n    Read\n          </Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`OpenZeppelin Docs`}</strong></p>\n          <p>{`Along with the Solidity docs themselves, this is as close to an authoritative source of great code and good practices as our decentralized party will likely ever get.`}</p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://docs.openzeppelin.com/openzeppelin/\" mdxType=\"Button\">\n    Secure\n          </Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`Uniswap V3 Development Book`}</strong></p>\n          <p>{`An incredible resource that will take your development to the next level, especially in terms of your ability to understand and work with DeFi things.`}</p>\n          <p><em parentName=\"p\">{`H/T Julian Traversa`}</em></p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://uniswapv3book.com/\" mdxType=\"Button\">\n    Learn\n          </Button>\n        </Flex>\n      </Chocolate>\n    </Box>\n    <h2 {...{\n      \"id\": \"the-listed-path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`The Listed Path`}<a parentName=\"h2\" {...{\n        \"href\": \"#the-listed-path\",\n        \"aria-label\": \"the listed path permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`While we specifically avoid these kinds of lists in Kernel, if you are the sort of person who is looking for a breadth of detail and all of the various possible tools, standards and best practices being developed across the globe, then this section is for you. `}</p>\n    <p>{`As the focus in our Resources section is interdisciplinary, it's worth noting that you can find a some more wonderful lists - and the kind of careful, step-by-step, conservative approach it implies - in our `}<a parentName=\"p\" {...{\n        \"href\": \"/resources/security/#praxis\"\n      }}>{`Security page`}</a>{`.`}</p>\n    <Column mdxType=\"Column\">\n      <Flex sx={{\n        position: 'relative',\n        flexDirection: 'column',\n        margin: '20px 0px'\n      }} mdxType=\"Flex\">\n        <p><strong parentName=\"p\">{`Developer Resources`}</strong></p>\n        <p>{`The Ethereum Foundation's list of resources. For those who are new, which is still everyone.`}</p>\n        <Button to=\"https://ethereum.org/en/developers/\" mdxType=\"Button\">\n    Read\n        </Button>\n      </Flex>\n      <Flex sx={{\n        position: 'relative',\n        flexDirection: 'column',\n        margin: '20px 0px'\n      }} mdxType=\"Flex\">\n        <p><strong parentName=\"p\">{`Tools List`}</strong></p>\n        <p>{`A well-maintained and comprehensive lists of developer resources and tooling in Ethereum.`}</p>\n        <Button to=\"https://github.com/ConsenSys/ethereum-developer-tools-list\" mdxType=\"Button\">\n    Write\n        </Button>\n      </Flex>\n    </Column>\n    <h2 {...{\n      \"id\": \"the-unknown-path\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`The Unknown Path`}<a parentName=\"h2\" {...{\n        \"href\": \"#the-unknown-path\",\n        \"aria-label\": \"the unknown path permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`Now that you have walked many of the ways through `}<a parentName=\"p\" {...{\n        \"href\": \"https://samczsun.com/escaping-the-dark-forest/\"\n      }}>{`the dark forest`}</a>{`, you may breathe out (the literal meaning of 'nirvana') a sigh of relief. But only for a moment! For the true masters act without a trace and - in order to achieve such exalted states of being - we need to investigate some of the further reaches of research and cryptography.`}</p>\n    <p>{`Again, given the interdisciplinary focus here, insightful documents which are not tools can be found in the `}<a parentName=\"p\" {...{\n        \"href\": \"/resources/research/#zero-knowledge\"\n      }}>{`Research section`}</a>{`.`}</p>\n    <Box sx={{\n      backgroundColor: 'primaryMuted',\n      borderRadius: '12px',\n      padding: '1rem',\n      display: 'flex',\n      marginBottom: '1rem',\n      flexDirection: 'column',\n      flexWrap: 'wrap'\n    }} mdxType=\"Box\">\n      <Chocolate sx={{\n        marginBottom: '1.5rem'\n      }} mdxType=\"Chocolate\">\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`zkREPL`}</strong></p>\n          <p>{`\"The circom tooling I use the most. Hover over variables to see the values.\"`}</p>\n          <p><em parentName=\"p\">{`H/T Justin Glibert`}</em></p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://zkrepl.dev/\" mdxType=\"Button\">\n    Iterate\n          </Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`Circom & SnarkJS`}</strong></p>\n          <p>{`A zkSnark circuit compiler, and zkSNARK implementation in JavaScript & WASM, built and `}<a parentName=\"p\" {...{\n              \"href\": \"https://www.youtube.com/watch?v=-9TJa1hVsKA\"\n            }}>{`explained here by Jordi Baylina`}</a>{`.`}</p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://github.com/iden3\" mdxType=\"Button\">\n    Construct\n          </Button>\n        </Flex>\n        <Flex sx={{\n          position: 'relative',\n          flexDirection: 'column',\n          margin: '20px 0px'\n        }} mdxType=\"Flex\">\n          <Icon size={\"40px\"} name=\"open_in_new_tab\" mdxType=\"Icon\" />\n          <p><strong parentName=\"p\">{`ZoKrates`}</strong></p>\n          <p>{`A toolbox for zkSNARKs on Ethereum.`}</p>\n          <p><em parentName=\"p\">{`H/T Luka`}</em></p>\n          <Button sx={{\n            position: 'absolute',\n            bottom: '-40px'\n          }} to=\"https://github.com/zokrates/zokrates\" mdxType=\"Button\">\n    Prove\n          </Button>\n        </Flex>\n      </Chocolate>\n    </Box>\n    <h2 {...{\n      \"id\": \"recordings\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Recordings`}<a parentName=\"h2\" {...{\n        \"href\": \"#recordings\",\n        \"aria-label\": \"recordings permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`Of course, no smart contract resources list would be complete without a recording of Austin Griffith breaking something in a live demo while wearing a bowtie:`}</p>\n    <Video src=\"https://www.youtube-nocookie.com/embed/UFLcw1ftrv0?start=102\" mdxType=\"Video\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}