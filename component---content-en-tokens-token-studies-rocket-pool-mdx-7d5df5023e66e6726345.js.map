{"version":3,"sources":["webpack://kernel-community/./content/en/tokens/token-studies/rocket-pool.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Aligner","Image","Process","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","center","src","isMDXComponent"],"mappings":"2QAQaA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAQN,EAAc,SACtBO,EAAUP,EAAc,WACxBQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGV,GACF,YACD,OAAO,QAACO,EAAD,iBAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,eAG5E,cACE,GAAM,cACN,MAAS,CACP,SAAY,aAHhB,eAKkB,aAAGC,WAAW,KAC5B,KAAQ,eACR,aAAc,wBACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,gGAAkF,kBAAQA,WAAW,KAAnB,sEAAlF,OACA,oDAAsC,aAAGA,WAAW,IAChD,KAAQ,0CAD0B,SAAtC,wRAGA,2bACA,4ZACA,cACE,GAAM,gBACN,MAAS,CACP,SAAY,aAHhB,iBAKoB,aAAGA,WAAW,KAC9B,KAAQ,iBACR,aAAc,0BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,qcACA,uaACA,oJACA,ocACA,cACE,GAAM,qBACN,MAAS,CACP,SAAY,aAHhB,wBAK2B,aAAGA,WAAW,KACrC,KAAQ,sBACR,aAAc,+BACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,sPACA,6RAA+Q,kBAAQA,WAAW,KAAnB,OAA/Q,gJACA,gDAAkC,cAAIA,WAAW,KAAf,eAAlC,6FAAsK,kBAAQA,WAAW,KAAnB,sBAAtK,yWACA,4SACA,oDAAsC,aAAGA,WAAW,IAChD,KAAQ,mHAD0B,uBAAtC,MAGA,QAACT,EAAD,CAASU,QAAM,EAACF,QAAQ,YACtB,QAACP,EAAD,CAAOU,IAAI,yBAAyBH,QAAQ,YAE9C,QAACR,EAAD,CAASU,QAAM,EAACF,QAAQ,YACtB,QAACP,EAAD,CAAOU,IAAI,0BAA0BH,QAAQ,YAE/C,QAACN,EAAD,CAASM,QAAQ,YACf,0HACA,kEAAoD,aAAGC,WAAW,IAC9D,KAAQ,wDADwC,cAApD,yBAGA,2MACA,iWAEF,cACE,GAAM,yBACN,MAAS,CACP,SAAY,aAHhB,2BAK8B,aAAGA,WAAW,KACxC,KAAQ,0BACR,aAAc,mCACd,UAAa,sBACZ,gBAAMA,WAAW,KAAjB,QACL,koBACA,8lBACA,6dACA,kBAAG,kBAAQA,WAAW,KAAnB,6IAAH,QAKJH,EAAWM,gBAAiB","file":"component---content-en-tokens-token-studies-rocket-pool-mdx-7d5df5023e66e6726345.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Aligner = makeShortcode(\"Aligner\");\nconst Image = makeShortcode(\"Image\");\nconst Process = makeShortcode(\"Process\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"rocket-pool\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Rocket Pool`}<a parentName=\"h1\" {...{\n        \"href\": \"#rocket-pool\",\n        \"aria-label\": \"rocket pool permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <p>{`One critical aspect of token design is to ensure that any token you create `}<strong parentName=\"p\">{`is intrinsically required for the protocol to function as expected`}</strong>{`. `}</p>\n    <p>{`The classic example of this is `}<a parentName=\"p\" {...{\n        \"href\": \"/tokens/token-studies/maker-difference\"\n      }}>{`Maker`}</a>{`. The system requires humans to make decisions on what kinds of collateral to accept, how much of it to accept, at what rate(s) to do so, as well as what the overall “interest rate” (or DAI Stability Rate) is at any given time. MKR holders vote regularly on these parameters.`}</p>\n    <p>{`If you–as an MKR holder–vote well, the system flourishes, extra DAI accrues and is used to buy back and burn MKR, which is good for you. If you make poor choices, there is a chance that the system becomes undercollateralized, at which point it prints MKR and sells it to pay down the debt, which means your holdings are diluted. This means that the intrinsically critical role MKR plays is as the “lender of last resort”.`}</p>\n    <p>{`All these financial terms might make it seem like the only way to weave your token and protocol together is through deep financial engineering. However, this is not necessarily true. Let’s look at the decentralised ETH staking service, Rocket Pool, as a good example of a token which is required for the protocol to work as expected without resorting to overly complex financial gymnastics.`}</p>\n    <h2 {...{\n      \"id\": \"flying-sketch\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Flying Sketch`}<a parentName=\"h2\" {...{\n        \"href\": \"#flying-sketch\",\n        \"aria-label\": \"flying sketch permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`To become an Ethereum 2.0 validator, you need to stake 32 ETH, which is out of reach for a lot of people. Therefore, many projects have emerged that enable people to participate in the upside of securing our shared network without needing to put down so much money initially. Rocket Pool–for reasons largely centred on their multiparty compute (MPC) setup–is likely the most interesting and values-aligned example of such projects.`}</p>\n    <p>{`Rocket Pool enables you, someone with less than 32 ETH, to participate in the upside of validating Ethereum 2.0 in two different ways. Firstly, you can simply stake your ETH with them and receive rETH in return. This rETH represents the performance of the Rocket Pool protocol. As everyone running validators as a part of the protocol earns rewards, the value of rETH increases, which is good for you.`}</p>\n    <p>{`Who runs validators? This is the second way to participate, because anyone who has at least 8 ETH can run a Rocket Pool node. `}</p>\n    <p>{`The flow is simple: cut the amount required to run a validator, then ensure that you match the ETH anyone puts up personally with ETH from the shared pool of those who have staked small amounts of ETH in order to hold rETH. This gets us up to 32 ETH required by Ethereum 2.0 and we can run a node. Node operators receive all the rewards for their staked ETH, and a small percentage of the rewards from the protocol-provided share.`}</p>\n    <h2 {...{\n      \"id\": \"demand-sink-reward\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Demand, Sink, Reward`}<a parentName=\"h2\" {...{\n        \"href\": \"#demand-sink-reward\",\n        \"aria-label\": \"demand sink reward permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`Of course, that is only half the story, because Ethereum 2.0 validators can be slashed for various reasons. So, how does the protocol insure itself against any potential losses, which would be reflected in the value of rETH?`}</p>\n    <p>{`Enter RPL, the Rocket Pool token. If I want to become a Rocket Pool node operator, I also need to stake RPL tokens equal in value to at least 10% (and at most 150%) of the initial value of my ETH stake. These act as insurance in the case my validator gets slashed `}<strong parentName=\"p\">{`and`}</strong>{` they determine the amount of rewards I earn from the protocol for running a node (the more I stake, the higher my portion of RPL rewards).`}</p>\n    <p>{`These rewards are paid out `}<em parentName=\"p\">{`in addition`}</em>{` to the direct revenue I receive in ETH for running a validator. How are they generated? `}<strong parentName=\"p\">{`Protocol inflation`}</strong>{`. The RPL token is inflated automatically by 5% per year. 70% of that 5% inflation is allocated to node operators. 15% of it is allocated to the “Protocol DAO” who are responsible for development and maintenance of the software and services, and 15% of it is allocated to the “OrcaleDAO” who provide information on validator balances and the RPL:ETH ratio.`}</p>\n    <p>{`These percentages are subject to change, and there is active debate about whether OracleDAO members deserve 15%. It’s likely we’ll see that change in the short term, which will happen through a ProtocolDAO vote determined by RPL tokens (as they also represent governance power).`}</p>\n    <p>{`This is what it all looks like `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.figma.com/file/JY42kaEayk7VHO5hhEslx9/RocketPool?type=whiteboard&node-id=0%3A1&t=SUxZBkoxMYW0Zt3q-1\"\n      }}>{`mapped out visually`}</a>{`:`}</p>\n    <Aligner center mdxType=\"Aligner\">\n      <Image src=\"/images/RocketPool.png\" mdxType=\"Image\" />\n    </Aligner>\n    <Aligner center mdxType=\"Aligner\">\n      <Image src=\"/images/RocketPool1.png\" mdxType=\"Image\" />\n    </Aligner>\n    <Process mdxType=\"Process\">\n      <p>{`The fact that I need to stake RPL when becoming a node operator is what generates ongoing demand.   `}</p>\n      <p>{`The act of staking it means there is a good “`}<a parentName=\"p\" {...{\n          \"href\": \"https://vitalik.eth.limo/general/2017/10/17/moe.html\"\n        }}>{`token sink`}</a>{`” in the protocol.  `}</p>\n      <p>{`The fact that my stake in RPL is what insures the protocol against potential slashing events is what makes it intrinsically critical to the proper functioning of the whole system.  `}</p>\n      <p>{`The fact that rewards are also paid out in RPL serves to further align incentives such that those running nodes want to make it easier for others, to teach them how to do so, to make it as secure as possible and attending with care to all the other “soft”, social requirements of maintaining good open source community software.  `}</p>\n    </Process>\n    <h2 {...{\n      \"id\": \"to-infinity-and-beyond\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`To Infinity, and Beyond`}<a parentName=\"h2\" {...{\n        \"href\": \"#to-infinity-and-beyond\",\n        \"aria-label\": \"to infinity and beyond permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`The final point is a fascinating one if you really reflect on it. My own experience at Status here is instructive to share. We ran one of the early ICOs and went from a community of 200 highly technical, very values-aligned people hacking Ethereum light clients onto any resource-restricted device we could get our hands on to a slack group of 20,000 people in 3 days. Almost immediately, we tried to split the \"token and trading talk\" into its own channel and effectively began ostracizing the people interested in that stuff because it somehow sullied our pure and noble technical motivations for starting the project.`}</p>\n    <p>{`This was an enormous mistake, brought about largely by the fact that SNT had very limited utility at launch and certainly was not intrinsically required for the operation of the mobile app we had launched. Instead, what you see in communities like Maker and Rocket Pool is people interested in trading and financial engineering having generative, wholesome, and interesting discussions with those more focused on the engineering challenges of MPC at scale, or creating node software for retail users, or any of the other highly technical topics Rocket Pool has made great progress on.`}</p>\n    <p>{`This cannot be overstated, because it is the epitome of a positive feedback loop in social space. You do not want to separate your community into those talking about the price and those \"doing the real work\" or however you phrase it. If those two groups are distinct, it is generally a sign that you have a badly designed token which is not intrinsically useful in your shared protocol(s) and so is only useful for the purposes of extractive speculation. `}</p>\n    <p><strong parentName=\"p\">{`If the people crafting the software and those creating the markets are totally distinct, you cannot play infinite games with one another.`}</strong>{`   `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}