{"version":3,"sources":["webpack://kernel-community/./blogPosts/en/blog/Editorial/signature-stories.mdx","webpack://kernel-community/./src/modules/layouts/blogPost_layout.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","AudioPlayer","Aligner","Flex","Button","Video","Image","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","src","center","sx","alignItems","to","secondary","inline","isMDXComponent","ContentBlock","children","width","m","mt","mb","pl","pr","position","pageContext","frontmatter","title","description","keywords","authors","date","image","recommend","t","useTranslation","useStaticQuery","blogPosts","siteContent","hasContributors","isArray","length","contributors","slice","pagePathSplit","pagePath","split","splice","typeIndex","indexOf","postType","postImage","isNaN","parseInt","otherPosts","map","rec","edges","filter","node","fileAbsolutePath","includes","concat","el","undefined","recommendations","seo","flexDirection","outline","icon","level","isDefaultLocale","objectFit","maxHeight","fontWeight","fontSize","justifyContent","mr","index","key"],"mappings":"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","file":"component---blog-posts-en-blog-editorial-signature-stories-mdx-ecde07397743a2a8bfa5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/blogPost_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AudioPlayer = makeShortcode(\"AudioPlayer\");\nconst Aligner = makeShortcode(\"Aligner\");\nconst Flex = makeShortcode(\"Flex\");\nconst Button = makeShortcode(\"Button\");\nconst Video = makeShortcode(\"Video\");\nconst Image = makeShortcode(\"Image\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"signature-stories-and-more-meaningful-economies\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Signature Stories and More Meaningful Economies`}<a parentName=\"h1\" {...{\n        \"href\": \"#signature-stories-and-more-meaningful-economies\",\n        \"aria-label\": \"signature stories and more meaningful economies permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h1>\n    <AudioPlayer src=\"https://kernel-audio.s3.amazonaws.com/signature_space_launch.mp3\" mdxType=\"AudioPlayer\" />\n    <p>{`You can listen to the social launch of the essay above, or go on and read about all the juicy technical details below.`}</p>\n    <hr></hr>\n    <p>{`We have created an interactive essay intended to expand our understanding of ownership so that it includes reciprocity and care, rather than just control and possession.`}</p>\n    <Aligner center mdxType=\"Aligner\">\n      <Flex sx={{\n        alignItems: 'center'\n      }} mdxType=\"Flex\">\n  \n  <Button to='https://sign.kernel.community' secondary inline mdxType=\"Button\">\n    Make your mark\n  </Button>\n      </Flex>\n    </Aligner>\n    <p>{`We wish to make new media which illustrate how to play with public tools for good thought in manifold ways. In particular, these ways ought to include the financial, but not be limited to it. We believe that the work of web3 is about programming in appropriate and contextual ways; not reducing everything to finance, nor using shared ledgers to sell hyped-up narratives about how we can solve all the problems of the world.`}</p>\n    <p>{`In crafting one such public `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-3/remember/\"\n      }}>{`tool for thought`}</a>{`, we have - out of necessity - made a few technical discoveries and innovations. This is the story of our shared work.`}</p>\n    <Video src=\"https://www.youtube-nocookie.com/embed/oBE8ToQS6CI\" mdxType=\"Video\" />\n    <h1 {...{\n      \"id\": \"free-signs\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Free Signs`}<a parentName=\"h1\" {...{\n        \"href\": \"#free-signs\",\n        \"aria-label\": \"free signs permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h1>\n    <p>{`First, we needed some non-financial means of interacting with text significantly. We initially began our work as a fork of the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.interdependence.online/declaration\"\n      }}>{`Declaration of Interdependence`}</a>{`, and so had in mind from the start some notion of âsigningâ the text permanently and meaningfully.`}</p>\n    <p>{`What this entails in practice is crafting an Ethereum Signed Message of the whole text and storing it somewhere permanent so that it may be referenced as an ongoing part of the documentâs shared history. If you do not submit it to Ethereum itself, then this signed message is entirely free, and can be verified by anyone without any need to touch the chain itself.`}</p>\n    <p>{`What does âsigningâ mean in this context, though? Do I have to agree to the whole text? Does it make me a co-creator or co-beneficiary? Or is it more like a clap, or a like? `}</p>\n    <p>{`While it is certainly closer to endorsement than co-creation in our context, a signed message links permanently your public key to some data. We have always liked the analogy that your public key is like your home address (and can be shared), while your private key is like your bathroom door key (donât share it ever). If we extend this analogy, then signed messages are like what you choose to plant in your front garden. As opposed to claps, which can only be seen on Medium, every time someone passes your home on the chain, theyâll be able to see what youâre growing there, irrespective of the media in which they encounter it.`}</p>\n    <p>{`The declaration was initially designed to use social verification, which we decided not to implement. You ought to be able to interact meaningfully with just a keypair: you do not need to reveal anything more about yourself than this if you do not wish to. Moreover, we changed the way these signatures are stored in Arweave so that they can be `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/dapp/src/utils/arweave.js#L70L77\"\n      }}>{`more easily retrieved`}</a>{`.`}</p>\n    <p>{`We also have our own infrastructure already running for `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/services\"\n      }}>{`Kernel services`}</a>{`, which allows us to integrate the upload to Arweave into our wider family of focused web apps. There is much more to come on this particular front.`}</p>\n    <h1 {...{\n      \"id\": \"sealing-the-deal\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Sealing the Deal`}<a parentName=\"h1\" {...{\n        \"href\": \"#sealing-the-deal\",\n        \"aria-label\": \"sealing the deal permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h1>\n    <p>{`The second manner in which you may interact with the text is explicitly financial. However, it is also the method which allows for the most choice of the three possible interactions, because the price is left open to readers to specify by using a slider. The price you choose to pay for one of these seals also determines the shape of the seal that gets created. The more you pay, the more edges the seal has; moving from square to hexagonal to circular.`}</p>\n    <p>{`Critically, this explicitly financial interaction has only one effect: all funds are spent on free(ing) education. We feel this makes for a strangely recursive loop, the likes of which could help fund public goods sustainably across our ecosystems. Creating a seal is a public and verifiable commitment to a simple idea: free education matters, in the sense of both cost and autonomy - which is something the mechanism by which these seals are minted mirrors.`}</p>\n    <p>{`We have a `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-1/playdough-protocols\"\n      }}>{`long-running interest in seals`}</a>{`. Not only have they been used to ensure data integrity for more than 3,000 years; they are also the means by which we can trace trade networks and the concomitant ways in which trust has spread across the globe (i.e. the fact Sumerian seals are found in Mali signifies that a network existed between these places); as well as being directly linked to the development of writing.`}</p>\n    <p>{`This work intends to extend integrity and trust into the interplanetary systems we now have available to us. In particular, we were inspired by the `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.rewilder.xyz\"\n      }}>{`Rewilder`}</a>{` team. However, when we looked at their contracts, we noticed that `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/maraoz/rewilder/blob/dapp/contracts/RewilderNFT.sol#L29\"\n      }}>{`they use their own api`}</a>{` and became determined to do better.`}</p>\n    <p>{`There are two ways immediately available for improving this. The first is to explore `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.ipfs.io/concepts/ipns/\"\n      }}>{`IPNS`}</a>{` in order to host metadata for all the potential NFTs in a more dynamic way. However, we knew of a simpler and far more delightfully hacky solution.`}</p>\n    <p>{`You can upload entire directories to Arweave and, if you structure that directory in a clever way, you can access all kinds of metadata in a âdynamicâ fashion from the same permaweb link. You get all the benefits of an api, with none of the costs or security/impermanence issues.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/tree/main/packages/hardhat/assets/arweave-seals\"\n      }}>{`Here is the directory`}</a>{` we uploaded to Arweave. `}<a parentName=\"p\" {...{\n        \"href\": \"https://arweave.net/SuPXgNnLyr_X4FR-a9M3jTloVH9wZnN334g9ToxyNZU/\"\n      }}>{`Here it is`}</a>{` on Arweave. We simply use this link as the baseURI for the tokens, and then specify which subdirectory and JSON file to add to the original link for each specific token `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/hardhat/contracts/SignatureFund.sol#L101\"\n      }}>{`depending on the msg.value`}</a>{` of the call used to mint that token.`}</p>\n    <h2 {...{\n      \"id\": \"recurrent-seasons\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Recurrent Seasons`}<a parentName=\"h2\" {...{\n        \"href\": \"#recurrent-seasons\",\n        \"aria-label\": \"recurrent seasons permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h2>\n    <p>{`Thereâs one more important thing to note in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/hardhat/contracts/SignatureFund.sol#L32\"\n      }}>{`this contract`}</a>{`. We know we could have made it much more gas efficient by storing the URI in a tokenURI() function that overrides the ERC721 standard, which would be view only. However, we want to be able to update the seals over time, which means pointing the baseURI for metadata to a different Arweave URL. It is therefore critical that we store the full string in each tokenURI, so that seals which have already been minted remain fixed, while new seals can be generated with a different season of images and text.`}</p>\n    <p>{`This allows us to explore ongoing, sustainable, seasonal interaction with the contract and with the wider web3 community. It also allows us to play with limits and constraints which are not contrived. That is: there is no limit to the number of seals which can be minted, because 10000 PFP campaigns cultivate the kind of consumerist culture we find to be boring and distasteful.`}</p>\n    <p>{`However, everyoneâs time is limited. It is not limited by some human contrivance in a structure we have designed and created: it is limited in an existential way. Therefore, placing a time limit on how long these particular seals will be created allows us to generate the kind of motivation to mint you might see in other projects, with less unnecessary anxiety and FOMO. We say this because seasonality implies not only change, by `}<strong parentName=\"p\">{`cyclicality`}</strong>{`. It is entirely possible that this season of seals will one day become available again: itâs just not clear when and what will come between then and now.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`When we cast these new networks as economies of sign rather than of ownership, then the game becomes one of actively finding more people able to respond, rather than extracting rent from my exclusive right to some artificially scarce series of bits.`}</p>\n    </blockquote>\n    <h1 {...{\n      \"id\": \"highlight-of-the-show\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Highlight of the Show`}<a parentName=\"h1\" {...{\n        \"href\": \"#highlight-of-the-show\",\n        \"aria-label\": \"highlight of the show permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h1>\n    <p>{`Lastly, we needed some visually meaningful, implicitly financial means of interacting with the text which allows readers to make their own permanently significant mark. This is easy enough to write out in natural language, but opening up such a route within this new medium would prove surprisingly challenging.`}</p>\n    <p>{`We were inspired by `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.productboard.com/blog/how-medium-highlights-feature-changed-publishing/\"\n      }}>{`Mediumâs highlights`}</a>{` and the manner in which those have been used both to foster a greater community of readers and writers sharing what they think and giving each other valuable feedback across different media, all of which increases total time reading.`}</p>\n    <p>{`We knew we wanted to achieve something similar, except with more visual impact and using NFTs. We also knew that using NFTs would imply a cost for readers which would be helpful in mitigating spam, and so we wrote the initial contracts with an entirely open mint function. Anybody could call the mint function, provide it with any string, and it would create a NFT with the tokenURI set to that string. `}</p>\n    <p>{`We knew the web app could send strings which referred to images generated using the text, and that we could exclude all other NFTs not minted in this manner from the â`}<a parentName=\"p\" {...{\n        \"href\": \"https://sign.kernel.community/signatures\"\n      }}>{`Soul Signs`}</a>{`â page. There is a difference between `}<em parentName=\"p\">{`contractual reality`}</em>{` - which everyone has access to and can do with as they please; and `}<em parentName=\"p\">{`social reality`}</em>{` - in which we can present curated data most relevant to our community and context through various interface choices.`}</p>\n    <p>{`This, at least, was the argument we presented to the wonderful developer who audited the contracts. With deep experience in the world of NFTs, this developer made the point that having an open and permissionless mint function was all well and good until a troll comes along and uses it to mint horrific and illegal content, which then results in your collection getting banned from secondary markets. `}</p>\n    <p>{`While such markets are not the major focus of our work, it would be a pity to have done all this only to get banned for someone elseâs actions. In addition to this, we have implemented a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/hardhat/contracts/base/ERC2981ContractWideRoyalties.sol\"\n      }}>{`10% contract-wide royalty`}</a>{` for secondary sales of Signature NFTs, so getting banned from marketplaces will likely lose us some potentially useful revenue in the long term.`}</p>\n    <h2 {...{\n      \"id\": \"better-ways-of-being-open\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Better Ways of Being Open`}<a parentName=\"h2\" {...{\n        \"href\": \"#better-ways-of-being-open\",\n        \"aria-label\": \"better ways of being open permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h2>\n    <p>{`Initially, we discussed the possibility of only allowing the creator of the contract to mint Signature NFTs. However, this defeats the whole point of permissionless systems, and introduces a potentially catastrophic security breach if the keys for that creator account are ever compromised. `}</p>\n    <p>{`So, we decided to add a âsignerâ account to the contract, separate from the creator. Though anyone could call mint(), the signer account would have to sign any message sent to that function, which now included a data param for that signed message, and which would fail if it had not been signed correctly. Trying to have our cake and eat it too, we made sure that we could `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/cb38481ad4d5a21b32ff618abb3b92eede80e52a/packages/hardhat/contracts/SignatureNFT.sol#L86\"\n      }}>{`set the signer account to 0x0`}</a>{` if we wanted, in which case it would be equivalent to a purely public function. The thinking here was, âpermissionless, but not unmoderatedâ.`}</p>\n    <p>{`This seemed to be an OK solution: not wonderful, but workable given our time constraints.`}</p>\n    <p>{`However, when we began working it into the web app, we saw how much unnecessary complexity this simple change at the contractual level added to the overall project. It required running a separate server somewhere which had the signer private key on it, then authenticating calls to that server, as well as the data in those calls, trying to obfuscate network requests made from the frontend (not really possible) and many other things which any âauthenticationâ paradigm necessarily implies.`}</p>\n    <p>{`It was a deep lesson in why passwords and privileged roles suck. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.oreilly.com/openbook/freedom/ch07.html\"\n      }}>{`Richard Stallman`}</a>{` was heard laughing loudly in the background of many of those late nights.`}</p>\n    <p>{`We returned to the drawing board. We needed some way of minting NFTs which was flexible enough to accommodate readerâs choices, but constrained enough that trolls would not use it to get our collection banned. We knew we could not use any kind of privileged account. The thought of trying to use the same technique as is outlined above for Sealed NFTs did cross our minds, but the number of different combinations of characters in a 2124 word essay is well over 2 million using the most optimistic of counts, and crafting all of that metadata was too much.`}</p>\n    <p>{`Instead, we decided that all we needed to record when readers minted a Signature NFT was the start and end indices of the characters they had chosen. We could then use these start and end numbers to somehow generate the beautiful image you now see. `}</p>\n    <p>{`However, we had already written the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/dapp/src/components/HighlightModal/Canvas.js\"\n      }}>{`p5.js script`}</a>{` which generates those images and had grown quite attached to it. The problem is: you canât run p5.js onchain. At best, you can write a `}<a parentName=\"p\" {...{\n        \"href\": \"https://etherscan.io/address/0x4325ac3371f5526fb4190e5b426355c141b85018#code\"\n      }}>{`room of infinite paintings`}</a>{` using all sorts of svg sleight of hand. That, too, was not something we felt capable of doing. However, onchain svgs do use a trick we could leverage: a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/hardhat/contracts/SignatureNFT.sol#L114\"\n      }}>{`tokenURI() override function`}</a>{` that returns metadata directly from the contract using base64 encoded json. This resulted in a major`}</p>\n    <Aligner center mdxType=\"Aligner\">\n      <Image src=\"/images/blog_headers/brainwave.jpg\" mdxType=\"Image\" />\n    </Aligner>\n    <p>{`We could take our p5.js script, turn it into a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/tree/main/packages/metta-sign\"\n      }}>{`little single page react app`}</a>{` that accepts start and end points in the url, `}<a parentName=\"p\" {...{\n        \"href\": \"https://opensea.mypinata.cloud/ipfs/QmYHGGTbqwFtfLFhhAKojVbmJwkVMNyqrniG9HLL1PYpyD/#0-462\"\n      }}>{`upload that app to IPFS`}</a>{`, reference it `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kernel-community/signature-economies/blob/main/packages/hardhat/contracts/SignatureNFT.sol#L40\"\n      }}>{`in the contract`}</a>{` and `}<em parentName=\"p\">{`voila`}</em>{`! All we need to do is return metadata from the tokenURI() function which references the IPFS hash together with the start and end of the readerâs chosen highlight, and this little SPA will generate the image on demand. Moreover, we can be sure it will always be findable by that hash and so we have finally achieved our aim.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`We have a permissionless, open mint function which can only be used to mint Signature NFTs from the essay, and will produce them as dynamic images which nevertheless have a permanent and verifiable root.`}</strong></p>\n    </blockquote>\n    <h1 {...{\n      \"id\": \"signing-off-with-gratitude\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Signing Off With Gratitude`}<a parentName=\"h1\" {...{\n        \"href\": \"#signing-off-with-gratitude\",\n        \"aria-label\": \"signing off with gratitude permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`Â¶`}</span></a></h1>\n    <p>{`One last consideration we spent endless hours on was, âwhich network do we deploy on?â This has become more and more of a challenge for many kinds of projects in the last few years, which we think is a wonderful thing. However, our own context made the choice quite simple. It was not about attention, liquidity, active users, or any other metric. It comes down to this incredibly personal and sentimental signature. Paris is fast approaching and the world will never be the same. We wanted this project to sign off the last seven, beautiful years on Eth1, and to serve as a statement of thanks and praise to all  who have participated.`}</p>\n    <p>{`We love you.`}</p>\n    <p>{`It has been a pleasure to work on this. The Signature Economies have cultivated within many of us a greater `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/i/spaces/1OyKADYgjOrxb\"\n      }}>{`sense of care`}</a>{` and patience, as well as an understanding of what it really means to `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/i/spaces/1OdKrBWkMlVKX\"\n      }}>{`do memorable work`}</a>{`. We find ourselves looking back over the commit trail and all the many months of work, and finally beginning to resonate with some of the deeper words in the text itself. In particular:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Seek to improve the people around you by humbling yourself and handing over power at every chance, without shirking responsibility. Delighted, you will gradually find yourself doing nothing, being happy.`}</p>\n    </blockquote>\n    <p>{`We invite you, one and all, to `}<a parentName=\"p\" {...{\n        \"href\": \"https://sign.kernel.community\"\n      }}>{`come and make eternally beautiful marks with us`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\n\nimport isArray from 'lodash/isArray'\nimport { BlogAuthor, BlogCard, BlogContributors } from '@modules/blog'\nimport { useTranslation } from '@modules/localization'\nimport { Button, Divider } from '@modules/ui'\nimport { Heading } from '@modules/ui/heading'\nimport { SEO } from '@modules/utility'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Box, Flex, jsx } from 'theme-ui'\n\n///MDX Layout for POSTs\nexport default ({ children, pageContext }) => {\n  const {\n    title,\n    description,\n    keywords, //<- Seo\n    authors,\n    date,\n    image,\n    recommend,\n  } = pageContext.frontmatter\n\n  const { t } = useTranslation()\n\n  const { blogPosts, siteContent } = useStaticQuery(graphql`\n    query blogPostRecommendations {\n      #Regex for all blog posts\n      blogPosts: allMdx(\n        filter: { fileAbsolutePath: { regex: \"//blogPosts/\" } }\n      ) {\n        edges {\n          node {\n            fileAbsolutePath\n            excerpt(truncate: true, pruneLength: 200)\n            frontmatter {\n              title\n              date(formatString: \"MM/DD/YYYY\")\n              description\n              authors\n              image\n            }\n            id\n          }\n        }\n      }\n      siteContent: allMdx(\n        filter: {\n          fileAbsolutePath: {\n            regex: \"/content/([\\\\w]{2})/(?!header.mdx|index.mdx|sidenav.mdx|example.mdx|social.mdx|footer.mdx|404.mdx|.js|.json)/\"\n          }\n        }\n      ) {\n        edges {\n          node {\n            excerpt(truncate: true, pruneLength: 200)\n            headings(depth: h1) {\n              value\n            }\n            fileAbsolutePath\n            frontmatter {\n              title\n              description\n              order\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const hasContributors = isArray(authors) && authors.length > 1\n  const contributors = hasContributors ? authors.slice(1, authors.length) : []\n\n  const pagePathSplit = pageContext.pagePath\n    .split('/')\n    .splice(1, pageContext.pagePath.split('/').length - 2)\n  const typeIndex = pagePathSplit.indexOf('blog') + 1\n\n  //Split absolute path up to blog, get directory AFTER blog.\n  let postType =\n    typeIndex !== pagePathSplit.length - 1\n      ? pagePathSplit[typeIndex]\n      : 'general'\n\n  let postImage = null\n\n  if (image === null || image === undefined) {\n    postImage = `/images/blog_headers/${postType}_1.png` //will be general image 1\n  } else {\n    if (isNaN(parseInt(image))) {\n      //Not a number, but a string. Expect entire src url\n      postImage = image\n    } else {\n      postImage = `/images/blog_headers/${postType}_${image}.png`\n    }\n  }\n\n  const otherPosts = recommend\n    ?.map((rec) => {\n      //Run through recommendation map for blog post recommendations\n      return blogPosts.edges.filter(({ node }) =>\n        node.fileAbsolutePath.includes(rec)\n      )[0]\n    })\n    .concat(\n      recommend?.map((rec) => {\n        //Concat recommendations for all other site content.\n        return siteContent.edges.filter(({ node }) =>\n          node.fileAbsolutePath.includes(rec)\n        )[0]\n      })\n    )\n    .filter((el) => el !== undefined) //Filter out empty array/undefined runs of recommend.\n\n  const recommendations = otherPosts && otherPosts.length > 0\n\n  const seo = {\n    title,\n    description,\n    keywords,\n  }\n\n  return (\n    <Flex sx={{ flexDirection: 'column' }}>\n      <ContentBlock>\n        <SEO {...seo} />\n        <Button outline icon=\"chevron_left\" to=\"/blog\">\n          {t('Back_To_Blog')}\n        </Button>\n\n        <Heading level={1}>{title}</Heading>\n\n        {authors ? (\n          <BlogAuthor\n            sx={{ mb: '16px' }}\n            authors={authors}\n            date={date}\n            isDefaultLocale={true}\n          />\n        ) : null}\n\n        <img\n          src={postImage}\n          sx={{\n            width: '100%',\n            objectFit: 'cover',\n            maxHeight: '478px',\n            mb: '48px',\n          }}\n        />\n\n        <div\n          sx={{\n            '& > *:first-of-type': {\n              mt: 0,\n            },\n          }}>\n          {children}\n        </div>\n      </ContentBlock>\n\n      {hasContributors ? (\n        <Box sx={{ pl: [4, 4, '64px'], pr: [4, 4, 0], mt: 2, mb: 2 }}>\n          <Divider />\n        </Box>\n      ) : null}\n\n      {hasContributors ? (\n        <ContentBlock>\n          <h2 sx={{ fontWeight: '500', fontSize: '32px' }}> Contributors </h2>\n          <p sx={{ mb: '40px' }}>\n            This article is possible with a little help from friends.\n          </p>\n          <BlogContributors contributors={contributors} />\n        </ContentBlock>\n      ) : null}\n\n      {recommendations ? (\n        <Box sx={{ pl: [4, 4, '64px'], pr: [4, 4, 0], mt: 4, mb: 2 }}>\n          <Divider />\n        </Box>\n      ) : null}\n\n      {recommendations ? (\n        <Box\n          sx={{\n            width: ['100%', '100%', '90%'],\n            m: '0 auto',\n            mt: [2, 4, 4],\n            mb: [2, 4, 4],\n            pl: [4, 4, 0],\n            pr: [4, 4, 0],\n            position: 'relative',\n          }}>\n          <h2 sx={{ mb: '66px', fontWeight: '500', fontSize: '32px' }}>\n            {' '}\n            Read More{' '}\n          </h2>\n          <Flex\n            sx={{\n              justifyContent: 'start',\n              width: '100%',\n              mb: [0, '80px', '80px'],\n              flexDirection: ['column', 'row', 'row'],\n              '& > *:not(:last-child)': {\n                mr: '96px',\n              },\n            }}>\n            {otherPosts.map(({ node }, index) => (\n              <BlogCard {...node} key={`blog-recommendation-${index}`} />\n            ))}\n          </Flex>\n        </Box>\n      ) : null}\n    </Flex>\n  )\n}\n\nfunction ContentBlock({ children }) {\n  return (\n    <Box\n      sx={{\n        width: ['100%', '100%', '80%'],\n        m: '0 auto',\n        mt: [2, 4, 4],\n        mb: [2, 4, 4],\n        pl: [4, 4, '64px'],\n        pr: [4, 4, 0],\n        position: 'relative',\n      }}>\n      {children}\n    </Box>\n  )\n}\n"],"sourceRoot":""}