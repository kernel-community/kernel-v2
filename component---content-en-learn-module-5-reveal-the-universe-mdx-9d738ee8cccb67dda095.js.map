{"version":3,"sources":["webpack://kernel-community/./content/en/learn/module-5/reveal-the-universe.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Aligner","Video","Link","Flash","Card","Process","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","center","sx","fontStyle","src","to","isMDXComponent"],"mappings":"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","file":"component---content-en-learn-module-5-reveal-the-universe-mdx-9d738ee8cccb67dda095.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/kernel-v2/kernel-v2/src/modules/layouts/default_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Aligner = makeShortcode(\"Aligner\");\nconst Video = makeShortcode(\"Video\");\nconst Link = makeShortcode(\"Link\");\nconst Flash = makeShortcode(\"Flash\");\nconst Card = makeShortcode(\"Card\");\nconst Process = makeShortcode(\"Process\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"🧩-revealing-the-universe\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`🧩 Revealing the universe`}<a parentName=\"h1\" {...{\n        \"href\": \"#%F0%9F%A7%A9-revealing-the-universe\",\n        \"aria-label\": \"🧩 revealing the universe permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h1>\n    <Aligner center sx={{\n      fontStyle: 'italic'\n    }} mdxType=\"Aligner\">\n\"The overall goal is: show a lot of truth, with minimum contrivance\" - Jonathan Blow\n    </Aligner>\n    <p>{`Andy Matuschak and Michael Nielsen suggested that `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-3/remember/#extending-our-mnemonics\"\n      }}>{`transformative tools - especially public goods`}</a>{` -\nstood to learn a lot from game designers, who have far more complete emotional and psychological\nmodels of human behaviour than anyone else in the digital world. So, let's take them at their\nword and see what the best indie developers in the world have to say about designing valuable games.`}</p>\n    <Video src=\"https://www.youtube-nocookie.com/embed/OGSeLSmOALU?start=91\" mdxType=\"Video\" />\n    <h3 {...{\n      \"id\": \"how-does-this-fit-into-kernel\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`How does this fit into Kernel?`}<a parentName=\"h3\" {...{\n        \"href\": \"#how-does-this-fit-into-kernel\",\n        \"aria-label\": \"how does this fit into kernel permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h3>\n    <p>{`You may be asking what computer games have to do with token design. Though the universe of games\nis fictional, the whole point of this talk is to demonstrate how the truths you will learn in a\nvaluable game apply in general. So the real question is: what universe do blockchains instantiate?`}</p>\n    <p>{`We've already suggested the answer: `}<strong parentName=\"p\">{`a universe of distributed `}<a parentName=\"strong\" {...{\n          \"href\": \"/learn/module-0/trust/\"\n        }}>{`trust`}</a></strong>{`. Now, like any good game designer, we have to find the \"nuggets of truth\" in this world, and  present them to everyone with the lightest possible contrivance. `}</p>\n    <p>{`We could teach you about the different kinds of `}<Link to=\"https://medium.com/bollinger-investment-group/constant-function-market-makers-defis-zero-to-one-innovation-968f77022159\" mdxType=\"Link\">{`constant function market makers`}</Link>{`, but these are just one particular flavour of one kind of nugget within the entire universe of applications made possible by distributed trust. We want to demonstrate `}<em parentName=\"p\">{`the principle`}</em>{` here: `}<strong parentName=\"p\">{`virtuous games lead to valuable truth`}</strong>{`. The better we design our games, the more clearly we can share our truths.`}</p>\n    <h2 {...{\n      \"id\": \"brief\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Brief`}<a parentName=\"h2\" {...{\n        \"href\": \"#brief\",\n        \"aria-label\": \"brief permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h2>\n    <p>{`Jonathan begins with a description of Portal 2, and demonstrates discovering a game mechanic to\ndo with using light bridges in such a way that you explore otherwise impossible-to-reach places.\nHe also shows a classic game - vvvvvv - which allows you to change the direction of gravity for\nyour character. Out of this single, incredibly simple rule, you can build mechanics that allow\nthe character to traverse 180 degree bends and full circles, opening the game up into all sorts\nof fun and revealing mazes with just one rule. Such mechanics are:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`little nuggets of truth the designer has found and packaged for the player. Now, I am calling\nthem 'truth' even though you, as a player, encounter them as pieces of a fictional game-world\nthat doesn't exist. But, if you think carefully about these things: they are about subjects\nwhich pertain to the real world.`}</p>\n    </blockquote>\n    <p>{`These often reveal sophisticated understandings of the universe - like lines intersecting in\n2-D space, but being one below the other in 3 dimensions (as in Portal 2), `}<strong parentName=\"p\">{`yet in game play,\nit happens very naturally.`}</strong>{` This is a lot like what mathematicians do: they build higher-order\nconstructs out of primitive \"what if?\" questions and then `}<strong parentName=\"p\">{`explore the consequences`}</strong>{`.`}</p>\n    <p>{`If you learn only one thing this week, let it be this: `}<strong parentName=\"p\">{`mechanism design is about asking the most simple \"what if?\" question you can, and then exploring the possibilities it implies fully`}</strong>{`.`}</p>\n    <Flash mdxType=\"Flash\">\n      <Card mdxType=\"Card\">\n        <p>{`Prompt: Virtuous games lead to `}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{` `}{`_`}{`_`}{`_`}{`_`}{`_`}{`.`}</p>\n        <p>{`valuable truth.`}</p>\n      </Card>\n    </Flash>\n    <p>{`Which brings us to the `}<em parentName=\"p\">{`aesthetics of game design:`}</em></p>\n    <Process mdxType=\"Process\">\n      <p>{`Mine nuggets of truth.`}</p>\n      <p>{`Package that truth for the player.`}</p>\n    </Process>\n    <p>{`Games are both toy universes and complex mathematical systems, and mathematics is an\n\"unreasonably effective\" tool for understanding the universe. In particular, mathematicians\nseem to agree that the shortest theorems which carry the deepest consequences are the \"most\nbeautiful.\" These are the nuggets we're looking for in the design of any mechanism.`}</p>\n    <h3 {...{\n      \"id\": \"exploring-well\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Exploring well`}<a parentName=\"h3\" {...{\n        \"href\": \"#exploring-well\",\n        \"aria-label\": \"exploring well permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h3>\n    <Process mdxType=\"Process\">\n      <p>{`Start with a mechanic; like a grappling hook that you can shoot and pull yourself with. `}</p>\n      <p>{`Or be more vague, beginning with a detail or consequence without being sure of the framework\naround it. For instance: a puzzle game where you know that you want players to remember a melody\nand recite it back at some stage, but don't know exactly how.`}</p>\n      <p>{`Aim towards the `}<strong parentName=\"p\">{`richest space`}</strong>{`, explore it `}<strong parentName=\"p\">{`completely`}</strong>{`, and trace a `}<strong parentName=\"p\">{`strong boundary`}</strong>{`\naround it.`}</p>\n      <p>{`Present the results `}<strong parentName=\"p\">{`cleanly`}</strong>{` and with the `}<strong parentName=\"p\">{`least contrivance`}</strong>{` to get closer to the truth. `}</p>\n    </Process>\n    <p>{`Marc talks about a 4-dimensional game he designed, where the mechanic is a button you can press\nto switch one of the dimensions. This dimensionality results in strange and wonderful connections\nbetween universes, such that you can pass through walls, or \"climb\" to rewards on them you\nwouldn't otherwise be able to reach.`}</p>\n    <p>{`It's worth remembering `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-1/joyful-subversion/#shifting-the-nature-of-work\"\n      }}>{`May Li Khoe and Khan Academy`}</a>{`. Great mechanism design revolves around small nuggets of truth, packaged with the least contrivance for people to find and experience themselves, much like negative numbers granting kids super powers when they adventure to the left of the number line, or the visual properties of prime numbers falling out of their work on simple addition and subtraction. `}<strong parentName=\"p\">{`Mechanism design is not about making complex systems! It is about simplifying complex insights`}</strong>{` so that people can learn them intuitively through use (which is joyful), not explicitly through study (which is boring and contrived).`}</p>\n    <Flash mdxType=\"Flash\">\n      <Card mdxType=\"Card\">\n        <p>{`Prompt: True or false: useful mechanisms are inherently complex.`}</p>\n        <p>{`False! `}<a parentName=\"p\" {...{\n            \"href\": \"https://www.youtube.com/watch?v=rI8tNMsozo0&list=PL5ClmaG2tnPO05rr1OOI1liWWrGjvAq_7&index=85\"\n          }}>{`Simplicity matters`}</a></p>\n      </Card>\n    </Flash>\n    <p>{`Jonathan discusses a puzzle pattern game he made - The Witness - and the \"game-feel\" reasons\nwhich led him to certain constraints for drawing the solutions to puzzles. These range from ease\nof use across platforms to the aesthetic feel that different rules - or the lack of them - induce.\nBefore he even knew what the puzzles were, he had set up a system which `}<em parentName=\"p\">{`could combine well with\nother mechanics`}</em>{`. This is critical: exploration of `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-1/understanding-ethereum/#virtual-economy\"\n      }}>{`low-level primitives`}</a>{` `}<strong parentName=\"p\">{`yields possibility`}</strong>{`. `}</p>\n    <h3 {...{\n      \"id\": \"virtuous-design\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`Virtuous design`}<a parentName=\"h3\" {...{\n        \"href\": \"#virtuous-design\",\n        \"aria-label\": \"virtuous design permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h3>\n    <p>{`We can define 8 criteria by which we can evaluate the \"virtue\" of different possibilities we\nstumble upon in our design process:`}</p>\n    <Process mdxType=\"Process\">\n      <p><strong parentName=\"p\">{`Richness`}</strong>{` - adjust the mechanic(s) to get the most interesting consequences. Once you\nknow you want to switch between 4 dimensions, or solve puzzles on a constrained grid, iterate\nover the sub-mechanics. Add terrain to explore in those dimensions, or think about the puzzle\nas drawing a partition between different spaces on the constrained grid. `}</p>\n      <p><strong parentName=\"p\">{`Completeness`}</strong>{` - are there consequences we haven't found? Jonathan discusses Braid, where\nthe main mechanic is that you can rewind time, with a sub-mechanic that some objects are immune\nto this ability. This sub-mechanic is an `}<em parentName=\"p\">{`exploratory question`}</em>{` and, in order to satisfy the\ncompleteness criterion, it must be applied to every object in the game. That said, there is a\ndeep balance between \"throwing something crazy\" at players as they first arrive in the game\nworld, which impedes their ability to learn; and holding it back entirely, which makes the game\nfeel incomplete.`}</p>\n      <p><strong parentName=\"p\">{`Surprise`}</strong>{` - maximize the amount of information contained within a limited and constrained\npackage. It is the counterbalancing force to completeness and is created with high level expressions\nbuilt from low-level concepts; or by combining game mechanics.`}</p>\n      <p><strong parentName=\"p\">{`Lightest Contrivance`}</strong>{` - “the less contrivance you have, the closer to the truth you’ll\nget”. This applies to both mechanics and level design. There is an elegance to `}<a parentName=\"p\" {...{\n          \"href\": \"https://subconscious.substack.com/p/simple-seeds\"\n        }}>{`simple rules`}</a>{` and\nan ugliness to complex ones. There's also a proportionality here: if you have 2 mechanics, one\nof which leads to a good deal of surprising and sublime results, and another which is twice as\ncomplicated and yields the same amount of results, then relative to each other, the second will\n`}<em parentName=\"p\">{`feel`}</em>{` ugly.`}</p>\n      <p><strong parentName=\"p\">{`Strength of Boundary`}</strong>{` - having done the above, we must now focus in on our surprisingly\nelegant consequences and remove mechanics which do not provide enough surprise; are not\nrelatively as rich as others; do not fit our refined definition of the game we're designing;\ncreate an unfocused space of consequences; or overlap too much.`}</p>\n      <p><strong parentName=\"p\">{`Compatibility`}</strong>{` - mechanics need to complement each other, and this idea is confined by\nboth richness and completeness. Only add mechanics that interact with all aspects of your game.`}</p>\n      <p><strong parentName=\"p\">{`Orthogonality`}</strong>{` - basically: your mechanics shouldn't overlap or have similar results. The\nexample Marc gives is Ikaruga: a shoot-them-up where you can shoot or switch colors, which are\ngreat examples of totally orthogonal principles.`}</p>\n      <p><strong parentName=\"p\">{`Generosity`}</strong>{` - this is the consequence of orthogonality and completeness and is `}<em parentName=\"p\">{`about\nhaving mechanics that are not limited to the player`}</em>{`. That is, you can always go into the fourth\ndimension, or you can always rewind time: there is nothing that limits you as these are precisely\nthe mechanics we wish to explore. `}</p>\n    </Process>\n    <p>{`Though this is specifically about computer game design, we can apply exactly the same kind of\nthinking to open networks of distributed trust. As `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-3/lock-it-open/#the-path-forward\"\n      }}>{`Juan Benet noted, verifiability is the key mechanic in Web 3`}</a>{`, and instant settlement and collective ownership are examples of interesting sub-mechanics which have not yet been completely explored.`}</p>\n    <Flash mdxType=\"Flash\">\n      <Card mdxType=\"Card\">\n        <p>{`Prompt: Virtuous design creates valuable truth, which can be assessed with at least 8 criteria. Which of these is most relevant to how we package the truths we find?`}</p>\n        <p>{`Lightest contrivance.`}</p>\n      </Card>\n    </Flash>\n    <h3 {...{\n      \"id\": \"the-value-of-truth\",\n      \"style\": {\n        \"position\": \"relative\"\n      }\n    }}>{`The value of truth`}<a parentName=\"h3\" {...{\n        \"href\": \"#the-value-of-truth\",\n        \"aria-label\": \"the value of truth permalink\",\n        \"className\": \"anchor-link after\"\n      }}><span parentName=\"a\">{`¶`}</span></a></h3>\n    <p>{`Jonathan asks: \"How do you make a good puzzle?\" It's not by making it hard. It's not even by\ntrying to make it good. It's by `}<strong parentName=\"p\">{`looking for truth and illustrating it`}</strong>{` with the puzzle. `}</p>\n    <Process mdxType=\"Process\">\n      <p>{`The point of the puzzle is to show some truth.`}</p>\n      <p>{`Know what that truth is.`}</p>\n      <p>{`Eliminate anything which is not about that truth.`}</p>\n    </Process>\n    <p>{`The question then becomes, \"how do we ensure the player can grasp this truth?\" It's not about\nbrute-force attempts: information needs to build up over each attempt, as it reveals more about\nthe game mechanics at work. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`\"The space around the truth is often more valuable than the truth itself.\"`}</p>\n    </blockquote>\n    <p>{`Importantly, we're not talking about arbitrary things here: we are talking about principles\nwhich are valuable in and of themselves, outside the game. Great games and great mechanics have\nthe same quality of unreasonable effectiveness as math does: they are particular illustrations\nof general truths. Another way to achieve this is with a `}<strong parentName=\"p\">{`hierarchy of ideas`}</strong>{`:`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`\"When you can have a sequence and there is a pattern along the sequence, a player can have a gradually-dawning surprise, or a sublime growth in understanding, about what the sequence points to.\"`}</p>\n    </blockquote>\n    <p>{`This happens regularly and naturally in all games as increasingly complicated mechanics or\ncombinations are introduced, but it can also \"take the form of a conversation about things which\nare not quite parallel to the mechanics themselves\". Jonathan illustrates this by returning to\nthe constrained grids of The Witness. Importantly, these non-verbal communications through game\nmechanics have to do with `}<a parentName=\"p\" {...{\n        \"href\": \"/learn/module-0/play-of-pattern\"\n      }}>{`teaching players a certain pattern`}</a>{`,\nand then `}<strong parentName=\"p\">{`getting them to break their perception of that pattern to see higher-order concepts`}</strong>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`\"By removing anything arbitrary, the designer is abdicating authorship over the puzzle. 'The\nUniverse' is the real designer of the puzzle. So the puzzle feels more fair, because it's not\nabout reading the mind of the designer, it's about reading the mind of 'mother nature'.\"`}</p>\n    </blockquote>\n    <p>{`If you make a game that encapsulates the truth in some way, then - even if your other design\nskills are poor - you will have created something valuable. So, what is the truth you want to\nencapsulate with your mechanism, and what is the smallest possible set of rich low-level\nquestions you can ask which will allow you to explore it completely and come up with something\nwhich is ultimately about generosity?`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`\"When we build games in this way, we're pointing many lenses at the universe to see what's out\nthere. This is really valuable, because games in this sense are another tool - like mathematics -\nin the toolbox that humanity can use to understand the world.\"`}</p>\n    </blockquote>\n    <Flash mdxType=\"Flash\">\n      <Card mdxType=\"Card\">\n        <p>{`Prompt: Great games and great mechanics are particular illustrations of `}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{` `}{`_`}{`_`}{`_`}{`_`}{`_`}{`_`}{`.`}</p>\n        <p>{`general truths.`}</p>\n      </Card>\n    </Flash>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}